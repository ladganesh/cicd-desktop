/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package trixware.erp.prodezydesktop.Utilities;

import trixware.erp.prodezydesktop.Model.StaticValues;
import trixware.erp.prodezydesktop.examples.DailyReportForm;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rajesh
 */
public class ProdDataConformationScreen extends javax.swing.JPanel {

    ResultSet result = null;
    
    /** Creates new form ProdDataConformationScreen */
    public ProdDataConformationScreen() {
        initComponents();
        
         try {
             result = DB_Operations.executeSingle ( "select showrdate as 'From Date', starttime as 'From Time', showrtdate as 'To Date',  stoptime as 'To Time', (select PART_NAME from finished_goods where FG_ID in (fgid)) as 'Product', (select MACHINE_NO from machine where MCH_ID in (machineid)) as 'Machine', (select PROCESS_NAME from PROCESS_MASTER where PROCESS_ID in (processid)) as 'Process',  qtyin as 'Qty In', qtyout as 'Qty Out', rejection as 'Rejected', (select EMP_NAME from employee where EmployeePK in (empid)) as 'Employee' from dailyreport3" );
            // jTable1.setModel(DbUtils.resultSetToTableModel(result)); 
            if ( result != null ) {
                jTable1.setModel ( buildTableModel ( result ) );
            }
            
            result.close () ;

        } catch ( SQLException e ) {
                System.out.println ( "Error "+e.getMessage () );
                StaticValues.writer.writeExcel ( ProdDataConformationScreen.class.getSimpleName () , ProdDataConformationScreen.class.getSimpleName () , e.getClass ().toString () , Thread.currentThread ().getStackTrace ()[ 1 ].getLineNumber () + "" , e.getMessage () , StaticValues.sdf2.format ( Calendar.getInstance ().getTime () ) );
        }
        
    }
    
    public static DefaultTableModel buildTableModel ( ResultSet rs )
            throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData ();

        // names of columns
        Vector<String> columnNames = new Vector<String> ();
        int columnCount = metaData.getColumnCount ();
        for ( int column = 1 ; column <= columnCount ; column ++ ) {
            columnNames.add ( metaData.getColumnName ( column ) );
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>> ();
        while ( rs.next () ) {

            Vector<Object> vector = new Vector<Object> ();
            for ( int columnIndex = 1 ; columnIndex <= columnCount ; columnIndex ++ ) {
                vector.add ( rs.getObject ( columnIndex ) );
            }
            data.add ( vector );
        }

        return new DefaultTableModel ( data , columnNames );

           }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1150, 500));
        setPreferredSize(new java.awt.Dimension(1100, 500));
        setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1);
        jScrollPane1.setBounds(3, 35, 1060, 382);

        jButton1.setText("Confirm");
        jButton1.setOpaque(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(400, 423, 100, 32);

        jButton2.setText("Cancel");
        jButton2.setOpaque(false);
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(500, 423, 100, 32);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Please check and confirm import data before writing into database");
        add(jLabel1);
        jLabel1.setBounds(2, 0, 1060, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        
        JOptionPane.showMessageDialog (null, "Data will be written to the production database now" );
        
        DB_Operations.executeInsertRandom ( "insert into dailyreport ( `rdate` , `rtdate` , `showrdate` , `showrtdate` , `fgid` , `processid` , `machineid` , `starttime` , `stoptime` , `qtyin` , `qtyout` , `rejection` , `empid` , `showFromTime` , `showToTime` , `batchno` , `rej_reason` , `act_stp_min` , `customer_id` , `shift_id` , `SMADID` , `actual_min` , `total_min` , `actual_hours` , `total_hours` , `alloted_rm`  )\n" +
                                                                                            "select `rdate` , `rtdate` , `showrdate` , `showrtdate` , `fgid` , `processid` , `machineid` , `starttime` , `stoptime` , `qtyin` , `qtyout` , `rejection` , `empid` , `showFromTime` , `showToTime` , `batchno` , `rej_reason` , `act_stp_min` , `customer_id` , `shift_id` , `SMADID` , `actual_min` , `total_min` , `actual_hours` , `total_hours` , `alloted_rm` from dailyreport3" ) ;
                
        DB_Operations.executeSingleNR ( "delete from dailyreport3") ;
        
        DailyReportForm.loadEntries ();
        
        DailyReportForm.dialog.dispose ();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        
        DB_Operations.executeSingleNR ( "delete from dailyreport3") ;
        DailyReportForm.dialog.dispose ();
    }//GEN-LAST:event_jButton2MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
