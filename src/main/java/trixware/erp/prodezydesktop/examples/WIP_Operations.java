/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trixware.erp.prodezydesktop.examples;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.JOptionPane;
import java.lang.Object;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.table.DefaultTableModel;
import trixware.erp.prodezydesktop.Derived.AutoCompletion;
import trixware.erp.prodezydesktop.Utilities.DB_Operations;
import trixware.erp.prodezydesktop.Utilities.HintTextField;

/**
 *
 * @author Rajesh
 */
public class WIP_Operations extends javax.swing.JPanel {

    /**
     * Creates new form WIP_Operations
     */
    public WIP_Operations() {
        initComponents();
        AutoCompletion.enable(jComboBox1);
        AutoCompletion.enable(jComboBox2);
        AutoCompletion.enable(jComboBox3);
        AutoCompletion.enable(jComboBox4);

        ResultSet result = DB_Operations.getMasters("customer");
            
        try{
            if (result != null) {
              
                while (result.next()) {
                    jComboBox2.addItem(result.getString("CUSTOMER_NAME"));
                }
            }else{
            
                jComboBox2.addItem( "Not Available"   );
                flag_required_master_data_NA = true ;
                show_data_NA_message( "Customer" );
            }
            
             result = DB_Operations.getMasters("finished_goods");
            if (result != null) {
              
                while (result.next()) {
                    jComboBox1.addItem(result.getString("PART_NAME"));
                }
            }else{
            
                jComboBox1.addItem( "Not Available"   );
                flag_required_master_data_NA = true ;
                show_data_NA_message( "Finished Goods / Product" );
            }
        }catch(SQLException e){
            
        }
        
        
        String selectedProduct = jComboBox1.getSelectedItem().toString();
        String selectedCustomer = jComboBox2.getSelectedItem().toString();

         System.out.println( " product "+selectedProduct +'\n' + "customer  "+selectedCustomer );  
        
        
        loadOrders(selectedProduct, selectedCustomer);
    }

    ArrayList<String> processes = new ArrayList<String>(Arrays.asList("Process1", "Process2", "Process3", "Process4", "Process5", "Process6", "Process7", "Process8", "Process9", "Process10", "Process11"));

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new HintTextField( "Move" );
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Process1-Qty", "Process2-Qty", "Process3-Qty", "Process4-Qty", "Process5-Qty", "Process6-Qty", "Process7-Qty", "Process8-Qty", "Process9-Qty", "Process10-Qty", "Process11-Qty", "Finished"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1);
        jScrollPane1.setBounds(6, 309, 1270, 230);

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        add(jComboBox1);
        jComboBox1.setBounds(180, 70, 180, 40);

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        add(jComboBox2);
        jComboBox2.setBounds(180, 120, 180, 40);

        jTextField1.setEditable(false);
        jTextField1.setToolTipText("Total Qty");
        add(jTextField1);
        jTextField1.setBounds(470, 120, 180, 40);

        jLabel1.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jLabel1.setText("Move to process");
        add(jLabel1);
        jLabel1.setBounds(710, 70, 180, 16);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Process1", "Process2", "Process3", "Process4", "Process5", "Process6", "Process7", "Process8", "Process9", "Process10", "Process11" }));
        jComboBox3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox3MouseClicked(evt);
            }
        });
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        add(jComboBox3);
        jComboBox3.setBounds(710, 120, 180, 40);

        jLabel2.setText("Nos");
        add(jLabel2);
        jLabel2.setBounds(1060, 80, 40, 20);

        jTextField2.setToolTipText("Move");
        add(jTextField2);
        jTextField2.setBounds(930, 70, 180, 40);

        jButton1.setText("Move");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(930, 120, 180, 40);

        jLabel3.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jLabel3.setText("Order QTY");
        add(jLabel3);
        jLabel3.setBounds(400, 120, 70, 40);

        jLabel4.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jLabel4.setText("Order No");
        add(jLabel4);
        jLabel4.setBounds(400, 70, 70, 40);

        jSlider1.setMaximum(11);
        jSlider1.setMinimum(1);
        jSlider1.setMinorTickSpacing(1);
        jSlider1.setValue(2);
        jSlider1.setEnabled(false);
        add(jSlider1);
        jSlider1.setBounds(20, 220, 1240, 16);

        jLabel5.setFont(new java.awt.Font("Leelawadee UI", 0, 10)); // NOI18N
        jLabel5.setText("Process1");
        add(jLabel5);
        jLabel5.setBounds(20, 240, 50, 20);

        jLabel6.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jLabel6.setText("Product");
        add(jLabel6);
        jLabel6.setBounds(90, 70, 80, 40);

        jLabel7.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jLabel7.setText("Customer");
        add(jLabel7);
        jLabel7.setBounds(90, 120, 80, 40);

        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        add(jComboBox4);
        jComboBox4.setBounds(470, 70, 180, 40);

        jLabel8.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jLabel8.setText("Product Proecss Path");
        add(jLabel8);
        jLabel8.setBounds(30, 200, 160, 16);

        jLabel9.setFont(new java.awt.Font("Leelawadee UI", 0, 10)); // NOI18N
        jLabel9.setText("Process2");
        add(jLabel9);
        jLabel9.setBounds(130, 240, 50, 20);

        jLabel10.setFont(new java.awt.Font("Leelawadee UI", 0, 10)); // NOI18N
        jLabel10.setText("Process3");
        add(jLabel10);
        jLabel10.setBounds(250, 240, 50, 20);

        jLabel11.setFont(new java.awt.Font("Leelawadee UI", 0, 10)); // NOI18N
        jLabel11.setText("Process4");
        add(jLabel11);
        jLabel11.setBounds(380, 240, 50, 20);

        jLabel12.setFont(new java.awt.Font("Leelawadee UI", 0, 10)); // NOI18N
        jLabel12.setText("Process5");
        add(jLabel12);
        jLabel12.setBounds(500, 240, 50, 20);

        jLabel13.setFont(new java.awt.Font("Leelawadee UI", 0, 10)); // NOI18N
        jLabel13.setText("Process6");
        add(jLabel13);
        jLabel13.setBounds(620, 240, 50, 20);

        jLabel14.setFont(new java.awt.Font("Leelawadee UI", 0, 10)); // NOI18N
        jLabel14.setText("Process7");
        add(jLabel14);
        jLabel14.setBounds(740, 240, 50, 20);

        jLabel15.setFont(new java.awt.Font("Leelawadee UI", 0, 10)); // NOI18N
        jLabel15.setText("Process8");
        add(jLabel15);
        jLabel15.setBounds(870, 240, 50, 20);

        jLabel16.setFont(new java.awt.Font("Leelawadee UI", 0, 10)); // NOI18N
        jLabel16.setText("Process9");
        add(jLabel16);
        jLabel16.setBounds(990, 240, 50, 20);

        jLabel17.setFont(new java.awt.Font("Leelawadee UI", 0, 10)); // NOI18N
        jLabel17.setText("Process10");
        add(jLabel17);
        jLabel17.setBounds(1110, 240, 50, 20);

        jLabel18.setFont(new java.awt.Font("Leelawadee UI", 0, 10)); // NOI18N
        jLabel18.setText("Process11");
        add(jLabel18);
        jLabel18.setBounds(1220, 240, 50, 20);
    }// </editor-fold>//GEN-END:initComponents

    static Calendar c2;
    static SimpleDateFormat sdf2;
    
    boolean flag_required_master_data_NA = false;

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        c2 = Calendar.getInstance();
        sdf2 = new SimpleDateFormat("dd-MM-yyyy-HH-mm-ss");
        String strDate2 = sdf2.format(c2.getTime());

        String PRODUCT = jComboBox1.getSelectedItem().toString();
        String CUSTOMER = jComboBox2.getSelectedItem().toString();
        int TARGETQTY = Integer.parseInt( jTextField1.getText() );
        String P = jComboBox3.getSelectedItem().toString();
        String MOVEDATE = strDate2;
        String ORDERNO = jComboBox4.getSelectedItem().toString();
        int MOVEQTY = Integer.parseInt(jTextField2.getText());

        String verificationQuery = "SELECT  MIN(MOVEQTY), PROCESS_STAGE FROM op_wip WHERE CUSTOMER = '" + CUSTOMER + "' AND PRODUCT = '" + PRODUCT + "'  AND ORDERNO = '" + ORDERNO + "' ORDER BY PROCESS_STAGE ";

        try {
            Connection con;

            con = DriverManager.getConnection("jdbc:sqlite:srirubber-v3.db");

            Statement pst = con.createStatement();

            ResultSet previousProcesses = pst.executeQuery(verificationQuery);

            if (previousProcesses != null) {
                
                String lastProcess = previousProcesses.getString("PROCESS_STAGE");
                int lastMoveQty = previousProcesses.getInt("MIN(MOVEQTY)");

                if (lastProcess.equals(P)) {

                    JOptionPane.showMessageDialog(null, "This process has already passed");

                } else if (lastMoveQty < MOVEQTY) {
                    JOptionPane.showMessageDialog(null, "Cannot move qty more than previous stage");

                } else if (MOVEQTY > TARGETQTY) {
                    JOptionPane.showMessageDialog(null, " Cannot move qty more than target qty ");

                } else {

                   String test = "insert into op_wip ( PRODUCT,CUSTOMER,TARGETQTY,PROCESS_STAGE,MOVEDATE,ORDERNO, MOVEQTY ) values ( '" + PRODUCT + "','" + CUSTOMER + "'," + TARGETQTY + ",'" + P + "','" + strDate2 + "','" + ORDERNO + "'," + MOVEQTY +" )" ;
                    //String test = "insert into op_wip ( PRODUCT,CUSTOMER,TARGETQTY,PROCESS_STAGE,MOVEDATE, ORDERNO, MOVEQTY ) values (  'PRODUCT ','  CUSTOMER '," + TARGETQTY + ",'P',' strDate2 ','  ORDERNO  '," + MOVEQTY + " )";
                    pst.executeUpdate(test);
                    JOptionPane.showMessageDialog(null, "Work in process updated !");
                    loadOrders(PRODUCT, CUSTOMER);
                }
            }

           
        } catch (SQLException e1) {

            System.out.println("Error " + e1.getMessage());
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:

        int selectedOrder = jComboBox4.getSelectedIndex();

        if (selectedOrder != -1) {

            jTextField1.setText(String.valueOf(orderValues.get(selectedOrder)));
        }
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox3MouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < processes.size(); i++) {
            {
                if (processes.get(i).equals(jComboBox3.getSelectedItem().toString())) {
                    jSlider1.setValue(i);
                    break;
                }
            }
        }
    }//GEN-LAST:event_jComboBox3MouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        try{
            String selectedProduct = jComboBox1.getSelectedItem().toString();
            String selectedCustomer = jComboBox2.getSelectedItem().toString();

            loadOrders(selectedProduct, selectedCustomer);
        }catch( NullPointerException e){
            
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:

        try{
            String selectedProduct = jComboBox1.getSelectedItem().toString();
            String selectedCustomer = jComboBox2.getSelectedItem().toString();

            loadOrders(selectedProduct, selectedCustomer);
        }catch( NullPointerException e){
            
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    public void loadOrders(String selectedProduct, String selectedCustomer) {

        try {

            //  SELECT PROCESS_STAGE, MOVEQTY FROM op_wip WHERE CUSTOMER =11 AND PRODUCT = 1  AND ORDERNO = 20 ORDER BY PROCESS_STAGE
            //  SELECT ORDERNO, TARGETQTY FROM op_wip WHERE CUSTOMER = 11 AND PRODUCT = 1
            Connection con;
            con = DriverManager.getConnection("jdbc:sqlite:srirubber-v3.db");
            Statement pst = con.createStatement();
            String loadOrderDetailsIfAvail = "SELECT DISTINCT ORDERNO, TARGETQTY, PROCESS_STAGE FROM op_wip WHERE CUSTOMER = '"+selectedCustomer+"' AND PRODUCT = '"+selectedProduct  +"'"; 
            
            ResultSet orderDetails = pst.executeQuery(loadOrderDetailsIfAvail);

            jComboBox4.removeAllItems();

            orderNos = new ArrayList<String>();
            orderValues = new ArrayList<String>();
            past_processes = new ArrayList<String>();

            if (orderDetails != null) {
               while(orderDetails.next()) {

                    orderNos.add(orderDetails.getString("ORDERNO"));
                    orderValues.add(orderDetails.getString("TARGETQTY"));
                    past_processes.add(orderDetails.getString("PROCESS_STAGE"));

                    jComboBox4.addItem(orderDetails.getString("ORDERNO"));

                }
                        
            }
            
            

            String lastProcess = "";
            if (past_processes.size() > 1   && past_processes.size()<processes.size()) {
                lastProcess = past_processes.get(past_processes.size()-1 );
            } else if (past_processes.size() == 1) {
                lastProcess = past_processes.get(0);
            }else if (past_processes.size() == processes.size()) {
                lastProcess = past_processes.get( past_processes.size()-1  );
            }
            
           
            
           
            int selectedIndex = processes.indexOf(lastProcess);
            
            
            jComboBox3.removeAllItems();
            for (int i = selectedIndex+1; i < processes.size()   ; i++) {
                {
                    jComboBox3.addItem(processes.get(i));           
                }
            }
                            
            
            jSlider1.setValue( selectedIndex+1 );
            //jLabel5.setText( lastProcess ) ;
            
            jLabel5.setFont(    new java.awt.Font("Leelawadee UI", 0, 11) );                      
            jLabel9.setFont(    new java.awt.Font("Leelawadee UI", 0, 11) );                      
            jLabel10.setFont(  new java.awt.Font("Leelawadee UI", 0, 11) );                     
            jLabel11.setFont(  new java.awt.Font("Leelawadee UI", 0, 11) );                     
            jLabel12.setFont(  new java.awt.Font("Leelawadee UI", 0, 11) );                     
            jLabel13.setFont(  new java.awt.Font("Leelawadee UI", 0, 11) );                     
            jLabel14.setFont(  new java.awt.Font("Leelawadee UI", 0, 11) );                     
            jLabel15.setFont(  new java.awt.Font("Leelawadee UI", 0, 11) );                     
            jLabel16.setFont(  new java.awt.Font("Leelawadee UI", 0, 11) );                     
            jLabel17.setFont(  new java.awt.Font("Leelawadee UI", 0, 11) );                     
            jLabel18.setFont(  new java.awt.Font("Leelawadee UI", 0, 11) );
            
            switch( selectedIndex+1 ){
                
                    case 1:          jLabel5.setFont(  new java.awt.Font("Leelawadee UI", 1, 12) );                       break;
                    case 2:          jLabel9.setFont(  new java.awt.Font("Leelawadee UI", 1, 12) );                       break;
                    case 3:          jLabel10.setFont(  new java.awt.Font("Leelawadee UI", 1, 12) );                     break;
                    case 4:          jLabel11.setFont(  new java.awt.Font("Leelawadee UI", 1, 12) );                     break;
                    case 5:          jLabel12.setFont(  new java.awt.Font("Leelawadee UI", 1, 12) );                     break;
                    case 6:          jLabel13.setFont(  new java.awt.Font("Leelawadee UI", 1, 12) );                      break;
                    case 7:          jLabel14.setFont(  new java.awt.Font("Leelawadee UI", 1, 12) );                      break;
                    case 8:          jLabel15.setFont(  new java.awt.Font("Leelawadee UI", 1, 12) );                      break;
                    case 9:          jLabel16.setFont(  new java.awt.Font("Leelawadee UI", 1, 12) );                      break;
                    case 10:        jLabel17.setFont(  new java.awt.Font("Leelawadee UI", 1, 12) );                      break;
                    case 11:        jLabel18.setFont(  new java.awt.Font("Leelawadee UI", 1, 12) );                     break;
                    
                   
            }

           

            int selectedOrder = jComboBox4.getSelectedIndex();

            if (selectedOrder != -1) {

                jTextField1.setText(String.valueOf(orderValues.get(selectedOrder  )));
            }

            loadOrderDetailsIfAvail = "SELECT  PRODUCT, CUSTOMER, FINISHED, MOVEDATE, MOVEQTY, ORDERNO, PROCESS_STAGE    FROM op_wip WHERE CUSTOMER = '" + selectedCustomer + "' AND PRODUCT ='" + selectedProduct  +"'";
            orderDetails = pst.executeQuery(loadOrderDetailsIfAvail);
            
            jTable1.setModel(buildTableModel(orderDetails));
            
         /*   for (int i = 0; i < processes.size(); i++) 
            {
                if (processes.get(i).equals(jComboBox3.getSelectedItem().toString())) {
                    jSlider1.setValue(i);
                    break;
                }
            }  */

        } catch (SQLException e) {
        //   System.out.println(" Error :  " + e.getMessage());
        }
    }

    public  DefaultTableModel buildTableModel(ResultSet rs)
            throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 3; column <= 5; column++) {
            
            if( column==3  ){
                for( int i = 0 ; i < processes.size() ; i++){
                    columnNames.add(  processes.get( i )  );
                }
                
            }
                    columnNames.add(metaData.getColumnName(column));
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while(rs.next())  {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 3; columnIndex <= 5; columnIndex++) {
                
                
                if( columnIndex==3  ){
                
                    for( int i = 0 ; i < processes.size() ; i++){
                        
                        if(  rs.getObject(7).equals( processes.get(i)  ) ){
                            vector.add(rs.getObject(5));
                        }else{
                            vector.add( "--" );
                         }
                    }
                }
                
                 vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }           

        return new DefaultTableModel(data, columnNames);

    }

    public void show_data_NA_message( String data ){
        
        JOptionPane.showMessageDialog(null, data+" details not availabel in masters. this information is important for carriying out this activity. Consider updating the master first ! ", "Data Required ", 0);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    // Vector<String[2]> value1 = new Vector<String[2]>();
    // Vector<Vector<Object>> values1 = new Vector<Vector<Object>>();
    ArrayList<String> orderNos;
    ArrayList<String> orderValues;
    ArrayList<String> past_processes;

}
