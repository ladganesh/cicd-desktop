/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trixware.erp.prodezydesktop.examples;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import trixware.erp.prodezydesktop.Utilities.DB_Operations;

/**
 *
 * @author Rajesh
 */
public class SalesReports extends javax.swing.JPanel {

    ArrayList<String[]> orderData;
     static Calendar c2;
    static SimpleDateFormat sdf2;
     String query;
        ResultSet rs = null;
    
    /**
     * Creates new form SalesReports
     */
    public SalesReports () {
        initComponents ();
        
        loadFiltersdata();
        
        c2 = Calendar.getInstance ();
        sdf2 = new SimpleDateFormat ( "dd-MM-yyyy HH:mm:ss" );
        String strDate2 = sdf2.format ( c2.getTime () );
        dateChooserCombo2.setDateFormat ( sdf2 ) ;
        dateChooserCombo1.setDateFormat ( sdf2 ) ;
    }

    public void loadFiltersdata(){
        
       
        
        // load all orders
        try{
           // query = "SELECT order_no as 'Order No', order_ack as 'OA No', po_date as 'PO Date', ( SELECT CUSTOMER_NAME from customer where CUSTOMER_ID in (so_customer_id) ) as 'Customer', (SELECT PART_NAME from finished_goods where FG_ID in (product_id)) as Product, product_qty from sales_orders a INNER JOIN po_order_details b where a.sales_po_id = ref_po_id " ;
            query = "SELECT distinct(order_no) as 'Order No' from sales_orders" ;
            rs = DB_Operations.executeSingle ( query );
           // jTable1.setModel( buildTableModel ( rs ) );
           //orderData = new ArrayList<String[]>();
            jComboBox1.removeAllItems();
            while(rs.next()){
                jComboBox1.addItem( rs.getString("Order No") ) ;
                
                //orderData.add( orderDetails);
            }
        }catch(SQLException e){
            e.getStackTrace ();
        }finally{
            try{ rs.close (); }catch(Exception e){ }
        }
        
        // load all products 
         try{
           // query = "SELECT order_no as 'Order No', order_ack as 'OA No', po_date as 'PO Date', ( SELECT CUSTOMER_NAME from customer where CUSTOMER_ID in (so_customer_id) ) as 'Customer', (SELECT PART_NAME from finished_goods where FG_ID in (product_id)) as Product, product_qty from sales_orders a INNER JOIN po_order_details b where a.sales_po_id = ref_po_id " ;
            query = "SELECT distinct(SELECT distinct PART_NAME from finished_goods where FG_ID in (product_id)) as Product from po_order_details" ;
            rs = DB_Operations.executeSingle ( query );
           // jTable1.setModel( buildTableModel ( rs ) );
           //orderData = new ArrayList<String[]>();
            jComboBox2.removeAllItems();
            while(rs.next()){
                jComboBox2.addItem( rs.getString("Product") ) ;
                  //orderData.add( orderDetails);
            }
        }catch(SQLException e){
            e.getStackTrace ();
        }finally{
            try{ rs.close (); }catch(Exception e){ }
            
        }
        
    }
    
    public DefaultTableModel buildTableModel(ResultSet rs)
            throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount ; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
           
        }

        return new DefaultTableModel(data, columnNames);

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        dateChooserCombo2 = new datechooser.beans.DateChooserCombo();

        setLayout(null);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(jComboBox1);
        jComboBox1.setBounds(20, 70, 129, 30);

        jLabel1.setText("Order Wise");
        add(jLabel1);
        jLabel1.setBounds(30, 40, 130, 16);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(jComboBox2);
        jComboBox2.setBounds(180, 70, 144, 30);

        jLabel2.setText("Product Wise");
        add(jLabel2);
        jLabel2.setBounds(190, 40, 150, 16);

        jLabel3.setText("From Month");
        add(jLabel3);
        jLabel3.setBounds(360, 40, 150, 16);

        jLabel4.setText("To Month");
        add(jLabel4);
        jLabel4.setBounds(570, 40, 150, 16);

        jButton1.setText("Get Report");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(630, 120, 144, 32);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1);
        jScrollPane1.setBounds(20, 170, 760, 300);

        dateChooserCombo1.setCalendarPreferredSize(new java.awt.Dimension(400, 300));
        dateChooserCombo1.setFieldFont(new java.awt.Font("Leelawadee UI", java.awt.Font.PLAIN, 11));
        dateChooserCombo1.setNavigateFont(new java.awt.Font("Leelawadee UI", java.awt.Font.PLAIN, 11));
        add(dateChooserCombo1);
        dateChooserCombo1.setBounds(350, 70, 200, 30);

        dateChooserCombo2.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    new java.awt.Color(187, 187, 187),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    new java.awt.Color(187, 187, 187),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    new java.awt.Color(187, 187, 187),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    new java.awt.Color(187, 187, 187),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    dateChooserCombo2.setCalendarPreferredSize(new java.awt.Dimension(400, 300));
    dateChooserCombo2.setFormat(1);
    dateChooserCombo2.setFieldFont(new java.awt.Font("Leelawadee UI", java.awt.Font.PLAIN, 11));
    add(dateChooserCombo2);
    dateChooserCombo2.setBounds(570, 70, 200, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       
        //  report for selected order qunatities and values
        query = "SELECT (SELECT PART_NAME from finished_goods where FG_ID in (product_id)) as Product , product_qty as Quantity , ((SELECT SALES_RATE from finished_goods where FG_ID in (product_id))* product_qty) as Value  from po_order_details a INNER JOIN sales_orders b where b.sales_po_id = '"+1+"' AND a.ref_po_id =  '"+1+ "'" ; 
        rs = DB_Operations.executeSingle ( query ) ;
        try{
           jTable1.setModel( buildTableModel ( rs ) );
        }catch(SQLException e){

        }
        
        
//        try
//      {
//          String host="Database address here";
//               
//         
//         final CategoryDataset dataset = new JDBCCategoryDataset(conn, SQL);
//         JFreeChart chart = ChartFactory.createBarChart("Report","X-Axis","Y-Axis", dataset, PlotOrientation.VERTICAL, false, false, false);
//        CategoryPlot catplot = chart.getCategoryPlot();
//        catplot.setRangeGridlinePaint(Color.BLACK);
//        ChartPanel chartpanel = new ChartPanel(chart);
//       jPanel1.removeAll();
//        jPanel1.add(chartpanel, BorderLayout.CENTER);
//        jPanel1.validate();    
//      }
//    catch(Exception e){
//        JOptionPane.showMessageDialog(null, e);
//    }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private datechooser.beans.DateChooserCombo dateChooserCombo2;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
