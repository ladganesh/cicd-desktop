/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trixware.erp.prodezydesktop.examples;

import Utilities.UID_Machine;
import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import trixware.erp.prodezydesktop.Model.StaticValues;
import trixware.erp.prodezydesktop.Utilities.DB_Operations;
import trixware.erp.prodezydesktop.Utilities.LoginForm;
import static trixware.erp.prodezydesktop.examples.HomeScreen.jPanel1;

/**
 *
 * @author Rajesh
 */
public class appSettings extends javax.swing.JPanel {

    public String settingsDBName;
    boolean dbExist = false;
    public static LoginForm loginF = null ;

    /**
     * Creates new form appSettings
     */
    public appSettings () {
        initComponents ();

        dateChooserCombo1.setVisible ( false );
        jLabel10.setText ( new SimpleDateFormat("MMM d, yyyy HH:mm ").format( dateChooserCombo1.getSelectedDate ().getTime () ) );
        
        jLabel6.setVisible ( false );
        jList1.setVisible ( false );

        File file = new File ( "databases\\" );

        if (  ! file.exists () ) {
            file.mkdir ();
        }

        String[] dsFiles = file.list ( new FilenameFilter () {
            @Override
            public boolean accept ( File current , String name ) {

                return new File ( current , name ).isFile ();
            }
        } );

        if ( dsFiles.length > 0 ) {
            DefaultListModel filesList = new DefaultListModel ();
            for ( int i = 0 ; i < dsFiles.length ; i ++ ) {
                dbExist = true;
                filesList.addElement ( dsFiles[ i ] );
            }
            jList1.setModel ( filesList );
        } else {
            jList1.setEnabled ( false );
            jCheckBox1.setEnabled ( false );
            jCheckBox1.setSelected ( false );

        }
    }

    
    public  appSettings ( String val1, String val2, String val3, String val4, String val5){
        initComponents ();

        //prefill licensee name, todays date as installation date, database
        jButton1.setEnabled ( false );
        jTextField1.setText( val1 ) ;
        jTextField1.setEnabled ( false );
        jTextField5.setEnabled(false);
        
        dateChooserCombo1.setVisible ( false );
        jLabel10.setText ( new SimpleDateFormat("MMM d, yyyy HH:mm ").format( dateChooserCombo1.getSelectedDate ().getTime () ) );
        jTextField3.setText( val3 ) ;
        jTextField4.setText( val4 ) ;        
        jTextField5.setText( val5 ) ;        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        testDayPicker1 = new com.qt.datapicker.TestDayPicker();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();

        setOpaque(false);
        setLayout(null);

        jLabel5.setFont(new java.awt.Font("Leelawadee UI", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Application Settings");
        add(jLabel5);
        jLabel5.setBounds(10, 0, 330, 40);

        jLabel1.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jLabel1.setText("Licensee");
        add(jLabel1);
        jLabel1.setBounds(140, 50, 80, 16);

        jLabel2.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jLabel2.setText("Date of Installation");
        add(jLabel2);
        jLabel2.setBounds(140, 130, 99, 16);

        jLabel3.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jLabel3.setText("License Key");
        add(jLabel3);
        jLabel3.setBounds(140, 90, 61, 16);

        jLabel6.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jLabel6.setText("Select Data Source");
        add(jLabel6);
        jLabel6.setBounds(140, 240, 140, 16);

        jTextField1.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        add(jTextField1);
        jTextField1.setBounds(310, 50, 220, 30);

        jTextField2.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        add(jTextField2);
        jTextField2.setBounds(310, 90, 220, 30);

        jList1.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        add(jScrollPane1);
        jScrollPane1.setBounds(310, 240, 220, 90);

        dateChooserCombo1.setFormat(2);
        add(dateChooserCombo1);
        dateChooserCombo1.setBounds(500, 130, 40, 30);

        jButton1.setText("Submit");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(660, 420, 77, 32);

        jLabel4.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jLabel4.setText("Customer Representative");
        add(jLabel4);
        jLabel4.setBounds(140, 340, 160, 16);

        jTextField3.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        add(jTextField3);
        jTextField3.setBounds(310, 340, 220, 30);

        jLabel7.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jLabel7.setText("Vendor Representative");
        add(jLabel7);
        jLabel7.setBounds(140, 380, 130, 16);

        jTextField4.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        add(jTextField4);
        jTextField4.setBounds(310, 380, 220, 30);

        jLabel8.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jLabel8.setText("Use existing datasource ?");
        add(jLabel8);
        jLabel8.setBounds(140, 170, 160, 16);

        jCheckBox1.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jCheckBox1.setText("Select Existing Data source");
        jCheckBox1.setOpaque(false);
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });
        add(jCheckBox1);
        jCheckBox1.setBounds(310, 170, 230, 24);

        jLabel9.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jLabel9.setText("Enter Data source name");
        add(jLabel9);
        jLabel9.setBounds(140, 200, 140, 20);
        add(jTextField5);
        jTextField5.setBounds(310, 200, 220, 30);
        add(jLabel10);
        jLabel10.setBounds(310, 130, 180, 30);
        add(jTextField6);
        jTextField6.setBounds(310, 420, 220, 30);

        jLabel11.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        jLabel11.setText("Web API URL ");
        add(jLabel11);
        jLabel11.setBounds(140, 430, 100, 16);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:

        UID_Machine uidMachine = new UID_Machine();
        
        
        
        String licenseeName, licenseKey, installationDate, DSName, customerRep, vendorRep, apiURL ;

        try {

            licenseeName = jTextField1.getText ();
            licenseKey = jTextField2.getText ().trim ();
            installationDate = new SimpleDateFormat("MMM d, yyyy HH:mm ").format(dateChooserCombo1.getSelectedDate ().getTime());
            apiURL =  jTextField6.getText ().trim () ;

            uidMachine.setLicenseeName ( licenseeName );
            uidMachine.setInstallationDate ( installationDate );
            
            if ( jCheckBox1.isSelected () ) {
                if ( dbExist ) {
                    DSName = jList1.getSelectedValue ();
                } else {
                    DSName = jTextField5.getText ().trim ();
                }

            } else {
                DSName = jTextField5.getText ().trim ();
            }

            customerRep = jTextField3.getText ().trim ();
            vendorRep = jTextField4.getText ().trim ();

            if (  ! licenseeName.equals ( "" ) &&  ! licenseKey.equals ( "" ) &&  ! installationDate.equals ( "" ) &&  ! DSName.equals ( "" ) &&  ! customerRep.equals ( "" ) &&  ! vendorRep.equals ( "" ) && ! apiURL.equals("")  ) {
                PreparedStatement st = null;
                
                // File f = new File("SSDsdIadc_xlp.db");
                String create_appSettings_table = "create table appSSJ_22154sdl_dsk_021 ( 'unus' TEXT , 'duo' TEXT, 'tria' TEXT, 'quattuor' TEXT , 'quinque' TEXT, 'sx' TEXT, svn TEXT  )  ";
                Connection _con = DriverManager.getConnection ( "jdbc:sqlite:SSDsdIadc_xlp.db" );
                st = _con.prepareStatement ( create_appSettings_table );
                st.execute ();
                st.close ();

                create_appSettings_table = "CREATE TABLE lilosessIONS ( `LID` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE, `UNAME` TEXT, `LITIME` datetime NOT NULL, `LOTIME` datetime NOT NULL, `UUID` INTEGER NOT NULL, `ISACTIVE` INTEGER NOT NULL, `FULLNAME` TEXT, `DEPARTMENT` INTEGER, `ROLE` TEXT ) ";
                st = _con.prepareStatement ( create_appSettings_table );
                st.execute ();
                st.close ();

                String insertSettings = "insert into appSSJ_22154sdl_dsk_021 ( 'unus' , 'duo', 'tria' , 'quattuor' , 'quinque' , 'sx' , svn)   values ( '" + licenseeName + "','" + licenseKey + "', '" + installationDate + "', '" + DSName + "', '" + customerRep + "', '" + vendorRep + "'  , '"+apiURL+"'  )";
                st = _con.prepareStatement ( insertSettings );
                st.execute ();
                st.close ();

                String selectAllSettings = "select * from appSSJ_22154sdl_dsk_021";
                st = _con.prepareStatement ( selectAllSettings );
                ResultSet rs = st.executeQuery ();
                settingsDBName = rs.getString ( "quattuor" );
                StaticValues.dbName = StaticValues.dbName + settingsDBName;
                System.out.println ( "Active DB File :" + StaticValues.dbName );

                
                
                
                
                // Check whether selected database is having all columns as per tables description in DB_Operations File
                // read fields from first table in seleted database and read fields as per added in the DB_Operations file
                //new DB_Synchronization(  DSName  );
                Thread t = new Thread () {
                    public void run () {
                        DB_Operations.createTables ();
                    }
                };

                t.start ();
                HomeScreen.home.removeForms ();
                
                rs.close ();   
        
                // JOptionPane.showMessageDialog ( null ,  uidMachine.createUniqeKey ());
               
                createErrorLog ();


                

            } else {
                JOptionPane.showMessageDialog ( null , "Please fill all field appropriately to proceed !" );
            }

        //} catch ( SQLException e ) {
        } catch ( Exception e ) {
            //System.out.println ( ""+e.getMessage ()  );
            StaticValues.writer.writeExcel ( appSettings.class.getSimpleName () , this.getClass ().toString () , e.getClass ().toString () , Thread.currentThread ().getStackTrace ()[ 2 ].getLineNumber () + "" , e.getMessage () , StaticValues.sdf2.format ( Calendar.getInstance ().getTime () ) );
            JOptionPane.showMessageDialog ( null , "Error !  Please contact your sevice provider" );
        }


    }//GEN-LAST:event_jButton1MouseClicked

    
    public void createErrorLog(){
        //Copy the settings database file in secured folder for unanemous access
                File file = new File ( System.getProperty ( "user.home" ) + "\\AppData\\Local\\" + "Prodezy" );
                if (  ! file.exists () ) {
                    file.mkdir ();
                }
                file = new File ( System.getProperty ( "user.home" ) + "\\AppData\\Local\\Prodezy\\" + "databases" );
                if (  ! file.exists () ) {
                    file.mkdir ();
                }
                file = new File ( System.getProperty ( "user.home" ) + "\\AppData\\Local\\Prodezy\\" + "app_log.txt" );

                if (  ! file.exists () ) {
                    try {
                        file.createNewFile ();
                    } catch ( IOException ex ) {
                        StaticValues.writer.writeExcel ( HomeScreen.class.getSimpleName () , HomeScreen.class.getSimpleName () , ex.getClass ().toString () , Thread.currentThread ().getStackTrace ()[ 2 ].getLineNumber () + "" , ex.getMessage () , StaticValues.sdf2.format ( Calendar.getInstance ().getTime () ) );
                        JOptionPane.showMessageDialog ( null , "Error !  Please contact your sevice provider" );
                    }
                }

                //Create a new excel file for recording logs of all errors in structured way
                StaticValues.createErrorLogExcel ();

                Path sourceDirectory = Paths.get ( "SSDsdIadc_xlp.db" );
                Path targetDirectory = Paths.get ( System.getProperty ( "user.home" ) + "\\AppData\\Local\\Prodezy\\" + "SSDsdIadc_xlp.db" );
                file = targetDirectory.toFile ();
                if (  ! file.exists () ) {
                    try {
                        Files.copy ( sourceDirectory , targetDirectory );
                    } catch ( IOException ex ) {
                        JOptionPane.showMessageDialog ( null , "Setting DB Copy Error " + ex.getMessage () );
                        StaticValues.writer.writeExcel ( HomeScreen.class.getSimpleName () , HomeScreen.class.getSimpleName () , ex.getClass ().toString () , Thread.currentThread ().getStackTrace ()[ 2 ].getLineNumber () + "" , ex.getMessage () , StaticValues.sdf2.format ( Calendar.getInstance ().getTime () ) );

                    }
                }

                sourceDirectory = Paths.get ( StaticValues.dbName );
                targetDirectory = Paths.get ( System.getProperty ( "user.home" ) + "\\AppData\\Local\\Prodezy\\" + StaticValues.dbName );
                file = targetDirectory.toFile ();
                if (  ! file.exists () ) {
                    try {
                        Files.copy ( sourceDirectory , targetDirectory );
                    } catch ( IOException  ex ) {
                        JOptionPane.showMessageDialog ( null , "Data DB Copy Error " + ex.getMessage () );
                        StaticValues.writer.writeExcel ( HomeScreen.class.getSimpleName () , HomeScreen.class.getSimpleName () , ex.getClass ().toString () , Thread.currentThread ().getStackTrace ()[ 2 ].getLineNumber () + "" , ex.getMessage () , StaticValues.sdf2.format ( Calendar.getInstance ().getTime () ) );
                    }
                } 
                
                
                loginF = new LoginForm();
                loginF.setBounds(  100, 200, 300, 300      );
                jLabel2.setBounds(  300, 10, 890, 570    );
                // jPanel1.removeAll();
                jPanel1.add( loginF ) ;
    }
    
    
    
    private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MouseClicked
        // TODO add your handling code here:

        if ( jCheckBox1.isSelected () ) {
            jLabel9.setVisible ( false );

            jTextField5.setVisible ( false );
            dbExist = true;

            jLabel6.setVisible ( true );
            jList1.setVisible ( true );

        } else {

            jLabel6.setVisible ( false );
            jList1.setVisible ( false );

            jLabel9.setVisible ( true );
            jTextField5.setVisible ( true );

            dbExist = false;
        }

    }//GEN-LAST:event_jCheckBox1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private com.qt.datapicker.TestDayPicker testDayPicker1;
    // End of variables declaration//GEN-END:variables
}
