/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trixware.erp.prodezydesktop.components;

import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JTextField;

/**
 *
 * @author dell
 */
public class MaintenanceTypePanel extends javax.swing.JPanel {

    
  //   Main_typeModel t_l_Model ;
    
     int totalmaintain ;
    float tlcostmain ;
    int main_TypeId ;
    String type_Str ;
    String desc;
    
    /**
     * Creates new form RMQtys
     */
    public MaintenanceTypePanel () 
    {
        initComponents ();
        
    //    t_l_Model = new Main_typeModel();
   
        //jTextField1.addKeyListener ( k );
        jTextField1.addFocusListener ( f2 );        
    }

   
    public int getTotalmaintain() {
        return totalmaintain;
    }
    
     public void setTotalmaintain(int totalmaintain) 
     {
         jLabel3.setText( totalmaintain+"" );
        this.totalmaintain = totalmaintain;
    }
     
    public String getDescription() {
        return jTextField3.getText();
    }
    
     public void setDescription(String desc) {
        this.desc = desc;
        jTextField3.setText( desc );
    }

    public float getTlcostmain() {
        return Float.parseFloat(jTextField1.getText() );
    }

    public void setTlcostmain(float tlcostmain) {
        this.tlcostmain = tlcostmain;
         jTextField1.setText( tlcostmain+"" )  ;
    }

    public int getMain_TypeId() {
        return main_TypeId;
    }

    public void setMain_TypeId(int main_TypeId) {
        jLabel1.setText( main_TypeId+"" ) ;
        this.main_TypeId = main_TypeId;
    }

     public String getType_Str() {
        return type_Str;
    }

    public void setType_Str(String type_Str) {
        jLabel2.setText( type_Str );
        this.type_Str = type_Str;
    }
   
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(240, 50));
        setLayout(null);

        jLabel1.setOpaque(true);
        add(jLabel1);
        jLabel1.setBounds(0, 0, 0, 0);
        add(jLabel2);
        jLabel2.setBounds(10, 5, 170, 30);

        jLabel3.setText("jLabel3");
        jLabel3.setPreferredSize(new java.awt.Dimension(0, 0));
        add(jLabel3);
        jLabel3.setBounds(140, 0, 0, 0);

        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
        });
        add(jTextField1);
        jTextField1.setBounds(184, 5, 50, 30);
        add(jTextField3);
        jTextField3.setBounds(250, 0, 270, 40);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1FocusGained

    KeyListener k = new KeyListener () {
        @Override
        public void keyTyped ( KeyEvent e ) {
           char enter = e.getKeyChar();
            String dot = Character.toString ( enter );
            if (  ! ( Character.isDigit ( enter ) )  && ! dot.equals ( ".")) {
                e.consume();
            }
            
        }

        @Override
        public void keyPressed ( KeyEvent e ) {
        }

        @Override
        public void keyReleased ( KeyEvent e ) {
        }
    };
    
    FocusListener f2 = new FocusListener () 
    {
        @Override
        public void focusGained ( FocusEvent e ) {
//            throw new UnsupportedOperationException ( "Not supported yet." ); //To change body of generated methods, choose Tools | Templates.
            JTextField jcb = ( JTextField ) e.getSource ();    
            jcb.setText("");
        }

        @Override
        public void focusLost ( FocusEvent e ) {
        //    throw new UnsupportedOperationException ( "Not supported yet." ); //To Search Google or type URL
//change body of generated methods, choose Tools | Templates.
            JTextField jcb = ( JTextField ) e.getSource ();    
            String x = jcb.getText().trim ();
            
            if(x.equalsIgnoreCase ( "")){
                x = "0";
            }
            
            try{    
                int num  = Integer.parseInt( String.valueOf( jcb.getText().toString() ) );
                    if( num<0  ){
                     jcb.setText(x);
                     
                    //evt.consume ();
                }
            }catch(NumberFormatException ex1){
                    jcb.setText(x);
//                    StaticValues.writer.writeExcel (MaintenanceTypePanel.class.getSimpleName () , MaintenanceTypePanel.class.getSimpleName () , ex1.getClass ().toString () , Thread.currentThread ().getStackTrace ()[ 1 ].getLineNumber () + "" , ex1.getMessage () , StaticValues.sdf2.format ( Calendar.getInstance ().getTime () ) );            
            }
        }
    };

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
