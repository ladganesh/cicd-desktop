/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trixware.erp.prodezydesktop.masters;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import trixware.erp.prodezydesktop.Model.StaticValues;
import trixware.erp.prodezydesktop.Utilities.DB_Operations;
import trixware.erp.prodezydesktop.examples.HomeScreen3;

/**
 *
 * @author Rajesh
 */
public class TestingMaster extends javax.swing.JPanel {

    String resource = "" , resourceType = "" ;
    
    /**
     * Creates new form TestingMaster
     */
    public TestingMaster() {
        initComponents();
        
        resourceType = "Masters" ;
        resource = "TestingMaster" ;

        try{
            StaticValues.checkUserRolePermission(resourceType, resourceType);
        }catch(Exception e){
             StaticValues.writer.writeExcel (resource , resource , e.getClass ().toString () , Thread.currentThread ().getStackTrace ()[ 1 ].getLineNumber () + "" , e.getMessage () , StaticValues.sdf2.format ( Calendar.getInstance ().getTime () ) );
        }
        
    }

    public void loadContent() {
        try {
            ResultSet result = DB_Operations.getMasters("testing");
            // jTable1.setModel(DbUtils.resultSetToTableModel(result)); 
            if (result != null) {
                jTable1.setModel(buildTableModel(result));
                jTable1.getColumnModel().getColumn(0).setMinWidth(0);
                jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
            }

        } catch (SQLException e) {

        }

        for (int i = 0; i < rawMaterialList.length; i++) {
                jComboBox1.addItem(rawMaterialList[i]);
        }
        
        jButton5.setEnabled(false);

    }

    public static DefaultTableModel buildTableModel(ResultSet rs)
            throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= 4; column++) {
            columnNames.add(metaData.getColumnName(column));
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= 4; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }

        return new DefaultTableModel(data, columnNames);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBox6 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Testing Master", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Leelawadee UI", 0, 14))); // NOI18N
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jLabel1.setText("Select Particular");
        add(jLabel1);
        jLabel1.setBounds(120, 120, 130, 30);

        jLabel2.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jLabel2.setText("Batch No");
        add(jLabel2);
        jLabel2.setBounds(120, 270, 130, 30);

        jTextField2.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        add(jTextField2);
        jTextField2.setBounds(250, 270, 213, 30);

        jLabel3.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jLabel3.setText("Date of Testing");
        add(jLabel3);
        jLabel3.setBounds(120, 310, 130, 30);

        jLabel4.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jLabel4.setText("Select Tests");
        add(jLabel4);
        jLabel4.setBounds(120, 160, 130, 30);

        jComboBox4.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Shore a hardness", "Tensile Strength", "Elongation at break", "Compression Set", "Specific Gravity", "Aeging in air", "aeging in oil", "Low temperature", "Ozone resistance test", "Ash Content", "Rheology", "Abrasion Test", "Bond Strength", " " }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        add(jComboBox4);
        jComboBox4.setBounds(250, 160, 213, 30);

        jLabel5.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jLabel5.setText("Test Required");
        add(jLabel5);
        jLabel5.setBounds(120, 350, 130, 30);

        jLabel6.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jLabel6.setText("Testing Frequency");
        add(jLabel6);
        jLabel6.setBounds(120, 390, 130, 30);

        jComboBox5.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Daily", "Weekly", "Monthly", "Yearly" }));
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });
        add(jComboBox5);
        jComboBox5.setBounds(250, 390, 213, 30);

        jButton1.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(550, 450, 130, 30);

        jButton2.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jButton2.setText("Add to Master");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
        jButton2.setBounds(550, 420, 130, 30);

        jComboBox6.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No", " " }));
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });
        add(jComboBox6);
        jComboBox6.setBounds(250, 350, 213, 30);

        jTable1.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1);
        jScrollPane1.setBounds(550, 80, 300, 317);

        jButton3.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jButton3.setText("Export to Excel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3);
        jButton3.setBounds(720, 450, 130, 30);

        dateChooserCombo1.setCalendarPreferredSize(new java.awt.Dimension(400, 320));
        dateChooserCombo1.setFieldFont(new java.awt.Font("SansSerif", java.awt.Font.PLAIN, 12));
        add(dateChooserCombo1);
        dateChooserCombo1.setBounds(250, 310, 213, 30);

        jList1.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jList1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jList1MouseDragged(evt);
            }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        add(jScrollPane2);
        jScrollPane2.setBounds(250, 190, 213, 70);

        jComboBox1.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        add(jComboBox1);
        jComboBox1.setBounds(250, 120, 213, 30);

        jButton4.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jButton4.setText("Reset");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4);
        jButton4.setBounds(550, 480, 130, 30);

        jButton5.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jButton5.setText("Edit Record");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5);
        jButton5.setBounds(720, 420, 130, 30);

        jLabel7.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jLabel7.setText("Testing for");
        add(jLabel7);
        jLabel7.setBounds(120, 80, 130, 30);

        jComboBox2.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Raw Material", "Compound", "Finished Goods" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        add(jComboBox2);
        jComboBox2.setBounds(250, 80, 213, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    DefaultListModel<String> testModel = new DefaultListModel();

    DefaultListModel<String> RM_Model = new DefaultListModel();

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
        testModel.addElement(jComboBox4.getSelectedItem().toString());

        jList1.setModel(testModel);
    }//GEN-LAST:event_jComboBox4ActionPerformed


    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        String RAW_MATERIAL, BTC_NO, TEST_DT, TEST, TEST_RQ, TEST_FREQ, CREATED_ON, EDITED_ON, EDITED_BY;

        RAW_MATERIAL = jComboBox1.getSelectedItem().toString();
        BTC_NO = jTextField2.getText();

        TEST_DT = String.valueOf(dateChooserCombo1.getText().toString());

        //TEST = jComboBox4.getSelectedItem().toString();
        TEST = "";
        int i = 0;
        while (i < testModel.size()) {
            if (i == testModel.size() - 1) {
                TEST = TEST + testModel.get(i);
            } else {
                TEST = TEST + testModel.get(i) + ",";
            }
            i++;
        }

        TEST_RQ = jComboBox6.getSelectedItem().toString();
        TEST_FREQ = jComboBox5.getSelectedItem().toString();
        CREATED_ON = "CREATED_ON";
        EDITED_ON = "EDITED_BY";
        EDITED_BY = "EDITED_ON";

        System.out.println(RAW_MATERIAL);

        String result = DB_Operations.insertIntoTestingMaster(RAW_MATERIAL, BTC_NO, TEST_DT, TEST, TEST_RQ, TEST_FREQ, CREATED_ON, EDITED_ON, EDITED_BY);

        JOptionPane.showMessageDialog(null, "" + result);

        loadContent();
        resetFields ();

        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Workbook wb = new HSSFWorkbook();

        ArrayList<String> column_names = new ArrayList<String>();
        ArrayList<String[]> values = new ArrayList<String[]>();
        int columnCount = 0;

        File file = null;

        try {
            ResultSet result = DB_Operations.getMasters("testing");
            if (result != null) {
                ResultSetMetaData metaData = result.getMetaData();
                // names of columns
                columnCount = metaData.getColumnCount();
                for (int column = 2; column <= columnCount - 3; column++) {
                    column_names.add(metaData.getColumnName(column));
                }
            }
            // data of the table
            Vector<Vector<Object>> data = new Vector<Vector<Object>>();
            while (result.next()) {
                String[] val = new String[columnCount];
                for (int columnIndex = 2; columnIndex <= columnCount; columnIndex++) {
                    if (columnIndex < columnCount - 2) {
                        val[columnIndex - 2] = String.valueOf(result.getObject(columnIndex));
                    }
                }
                values.add(val);
            }
        } catch (SQLException e) {

        }

        // Cell style for header row
        CellStyle cs = wb.createCellStyle();
        //cs.setFillForegroundColor(HSSFColor.LIME.index);
        //cs.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND);

        CellStyle cs2 = wb.createCellStyle();
        cs2.setFillForegroundColor(HSSFColor.ROSE.index);
        cs2.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND);

        // New Sheet
        Sheet sheet1 = null;
        sheet1 = wb.createSheet("Testing  Master");
        sheet1.setColumnWidth(0, (15 * 500));

        Cell c = null;
        Cell c3 = null;

        Row row = sheet1.createRow(1);
        //  c = row.createCell(0);
        // c.setCellValue("");
        // c.setCellStyle(cs);

        int i = 1;
        //add column names to the firt row of excel
        row = sheet1.createRow(i++);
        for (int a = 0; a < column_names.size(); a++) {
            c = row.createCell(a);
            // c.setCellValue(cursor.getString(a));
            c.setCellValue(column_names.get(a));
            c.setCellStyle(cs);
        }

        for (int j = 0; j < values.size(); j++) {
            String[] rowValues = values.get(j);
            Row row4 = sheet1.createRow(i++);
            for (int k = 0; k < rowValues.length; k++) {
                {

                    c = row4.createCell(k);
                    c.setCellValue(rowValues[k]);
                    c.setCellStyle(cs);
                }
            }
            Calendar c2 = Calendar.getInstance();
            SimpleDateFormat sdf2 = new SimpleDateFormat("ddMMMyyyy_HH_mm_a");
            String strDate2 = sdf2.format(c2.getTime());
            file = new File("Testing Master File " + strDate2 + ".xls");

            FileOutputStream os = null;

            try {
                os = new FileOutputStream(file);
                wb.write(os);
                wb.close();
                os.close();
                // JOptionPane.showMessageDialog(null, "New File generated at " + file.getAbsolutePath());
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Error " + e.getMessage());
            } finally {

            }
        }

        JOptionPane.showMessageDialog(null, "New File generated at " + file.getAbsolutePath());

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:

        jButton5.setEnabled(true);

        ArrayList<String> values = new ArrayList<String>();
        ArrayList<byte[]> files = new ArrayList<byte[]>();
        int columnCount = 0;
        // get the model from the jtable
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // get the selected row index
        int selectedRowIndex = jTable1.getSelectedRow();

        selectedRecordID = Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString());

        try {
            ResultSet result = DB_Operations.getSingleMasters("testing", Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString()));
            if (result != null) {
                ResultSetMetaData metaData = result.getMetaData();
                columnCount = metaData.getColumnCount();
                while (result.next()) {
                    for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                        if (columnIndex < columnCount - 2) {
                            values.add(String.valueOf(result.getObject(columnIndex)));
                        }
                    }
                }
            }
        } catch (SQLException e) {
            System.out.println("Error " + e.getMessage());
        }

        jComboBox1.setSelectedItem(0);                        //  RAW_MATERIAL = 
        jTextField2.setText(values.get(2));                                       //  BTC_NO = 
        dateChooserCombo1.setText(values.get(3));                          // TEST_DT = 

        DefaultListModel<String> testList = new DefaultListModel<>();

        String[] instrList = values.get(4).split(",");
        testList.removeAllElements();
        for (int i = 0; i < instrList.length; i++) {
            System.out.println(instrList[i]);
            testList.addElement(instrList[i]);
        }
        jList1.setModel(testList);

        jComboBox6.setSelectedItem(0);                        // TEST_RQ = 
        jComboBox5.setSelectedItem(0);                        // TEST_FREQ = 

        jButton2.setEnabled(false);

    }//GEN-LAST:event_jTable1MouseClicked

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        if (!(testModel.getSize() < 1)) {

            int selection = jList1.getSelectedIndex();
            testModel.removeElementAt(selection);
            jList1.setModel(testModel);
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseDragged
        // TODO add your handling code here:

    }//GEN-LAST:event_jList1MouseDragged

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        
        jList1.removeAll();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        HomeScreen3.home.removeForms();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

        String RAW_MATERIAL, BTC_NO, TEST_DT, TEST, TEST_RQ, TEST_FREQ, CREATED_ON, EDITED_ON, EDITED_BY;

        RAW_MATERIAL = jComboBox1.getSelectedItem().toString();
        BTC_NO = jTextField2.getText();
        TEST_DT = String.valueOf(dateChooserCombo1.getText());
        TEST = "";
        int i = 0;
        while (i < testModel.size()) {
            if (i == testModel.size() - 1) {
                TEST = TEST + testModel.get(i);
            } else {
                TEST = TEST + testModel.get(i) + ",";
            }
            i++;
        }

        TEST_RQ = jComboBox6.getSelectedItem().toString();
        TEST_FREQ = jComboBox5.getSelectedItem().toString();

        EDITED_ON = "EDITED_BY";
        EDITED_BY = "EDITED_ON";

        int ID = selectedRecordID;

        String result = DB_Operations.updateTestingMaster(RAW_MATERIAL, BTC_NO, TEST_DT, TEST, TEST_RQ, TEST_FREQ, EDITED_ON, EDITED_BY, ID);

        JOptionPane.showMessageDialog(null, "" + result);

        loadContent();

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        resetFields();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:

        String selection = jComboBox2.getSelectedItem().toString();

        jComboBox1.removeAllItems();
        
        
        
        if (selection.equalsIgnoreCase("Raw Material")) {

            for (int i = 0; i < rawMaterialList.length; i++) {
                jComboBox1.addItem(rawMaterialList[i]);
            }
           

        } else if (selection.equalsIgnoreCase("Compound")) {
            for (int i = 0; i < compoundList.length; i++) {
                    jComboBox1.addItem(compoundList[i]);
            }

        } else if (selection.equalsIgnoreCase("Finished Goods")) {
            try {
                ResultSet result = DB_Operations.getMasters("finished_goods");
                 if(result!=null){                           
                    while (result.next()) {
                        jComboBox1.addItem(result.getString("PART_NAME"));
                    }
                } else {
                    jComboBox1.addItem("Not Available");
                }
            } catch (SQLException e) {

            }

        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    public void resetFields() {

        jComboBox1.setSelectedItem(0);                        //  RAW_MATERIAL = 
        jTextField2.setText("");                                       //  BTC_NO = 
        dateChooserCombo1.setText("");                          // TEST_DT = 
        //jList1.removeAll();                                            //  tests
        testModel.removeAllElements();
        jList1.setModel(testModel);
        jComboBox6.setSelectedItem(0);                        // TEST_RQ = 
        jComboBox5.setSelectedItem(0);                        // TEST_FREQ = 

        jButton2.setEnabled(true);
        jButton5.setEnabled(false);
        jTable1.clearSelection ();

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    int selectedRecordID = 0;

    String[] rawMaterialList = new String[]{"Raw Polymer",
        "Carbon Black",
        "White Filler",
        "Oils",
        "Rubber Chemicals",
        "Chemlok",
        "Solvents",
        "Metal Inserts",
        "Consumanles",
        "Spares",
        "Colours",
        "Rubber Compounds",
        "Manufactured",
        "Traded"};

    String[] compoundList = new String[]{"Compound 1",
        "Compound 2",
        "Compound 3",
        "Compound 4",};
}
